Index: kauth-4.95.0/autotests/CMakeLists.txt
===================================================================
--- kauth-4.95.0.orig/autotests/CMakeLists.txt	2014-01-16 15:41:06.070373452 +0000
+++ kauth-4.95.0/autotests/CMakeLists.txt	2014-01-16 15:41:06.050373453 +0000
@@ -2,7 +2,7 @@
 find_package(Qt5 5.2.0 CONFIG REQUIRED DBus Test)
 
 qt5_add_dbus_adaptor(kauth_dbus_adaptor_tests_SRCS
-                     ../src/backends/dbus/org.kde.auth.xml
+                     ../src/backends/dbus/org.kde.kf5auth.xml
                      ../src/backends/dbus/DBusHelperProxy.h
                      KAuth::DBusHelperProxy)
 
Index: kauth-4.95.0/autotests/HelperTest.cpp
===================================================================
--- kauth-4.95.0.orig/autotests/HelperTest.cpp	2014-01-16 15:41:06.070373452 +0000
+++ kauth-4.95.0/autotests/HelperTest.cpp	2014-01-16 15:41:06.054373453 +0000
@@ -104,7 +104,7 @@
     // The timer is here just to prevent the app from crashing.
     QTimer *timer = new QTimer(0);
 
-    QVERIFY(m_helperProxy->initHelper(QLatin1String("org.kde.auth.autotest")));
+    QVERIFY(m_helperProxy->initHelper(QLatin1String("org.kde.kf5auth.autotest")));
 
     m_helperProxy->setHelperResponder(m_helper);
 
@@ -138,8 +138,8 @@
 {
     emit changeCapabilities(KAuth::AuthBackend::AuthorizeFromHelperCapability | KAuth::AuthBackend::CheckActionExistenceCapability);
 
-    KAuth::Action action(QLatin1String("org.kde.auth.autotest.standardaction"));
-    action.setHelperId(QLatin1String("org.kde.auth.autotest"));
+    KAuth::Action action(QLatin1String("org.kde.kf5auth.autotest.standardaction"));
+    action.setHelperId(QLatin1String("org.kde.kf5auth.autotest"));
     QVERIFY(action.isValid());
 
     QCOMPARE(action.status(), KAuth::Action::AuthRequiredStatus);
@@ -153,8 +153,8 @@
 
 void HelperTest::testExecuteJobSignals()
 {
-    KAuth::Action action(QLatin1String("org.kde.auth.autotest.longaction"));
-    action.setHelperId(QLatin1String("org.kde.auth.autotest"));
+    KAuth::Action action(QLatin1String("org.kde.kf5auth.autotest.longaction"));
+    action.setHelperId(QLatin1String("org.kde.kf5auth.autotest"));
     QVERIFY(action.isValid());
 
     QCOMPARE(action.status(), KAuth::Action::AuthRequiredStatus);
@@ -186,8 +186,8 @@
 
 void HelperTest::testActionData()
 {
-    KAuth::Action action(QLatin1String("org.kde.auth.autotest.echoaction"));
-    action.setHelperId(QLatin1String("org.kde.auth.autotest"));
+    KAuth::Action action(QLatin1String("org.kde.kf5auth.autotest.echoaction"));
+    action.setHelperId(QLatin1String("org.kde.kf5auth.autotest"));
 
     QVariantMap args;
     // Fill with random data (and test heavy structures while we're at it)
Index: kauth-4.95.0/autotests/TestBackend.cpp
===================================================================
--- kauth-4.95.0.orig/autotests/TestBackend.cpp	2014-01-16 15:41:06.070373452 +0000
+++ kauth-4.95.0/autotests/TestBackend.cpp	2014-01-16 15:41:06.054373453 +0000
@@ -54,7 +54,7 @@
         m_actionStatuses.insert(action, Action::AuthRequiredStatus);
     } else if (action == QLatin1String("always.authorized")) {
         m_actionStatuses.insert(action, Action::AuthorizedStatus);
-    } else if (action.startsWith(QLatin1String("org.kde.auth.autotest"))) {
+    } else if (action.startsWith(QLatin1String("org.kde.kf5auth.autotest"))) {
         m_actionStatuses.insert(action, Action::AuthRequiredStatus);
     }
 }
@@ -87,7 +87,7 @@
         return false;
     } else if (action == QLatin1String("always.authorized")) {
         return true;
-    } else if (action.startsWith(QLatin1String("org.kde.auth.autotest"))) {
+    } else if (action.startsWith(QLatin1String("org.kde.kf5auth.autotest"))) {
         qDebug() << "Caller ID:" << callerId;
         if (callerId == callerID()) {
             m_actionStatuses.insert(action, Action::AuthorizedStatus);
@@ -110,7 +110,7 @@
             action != QLatin1String("generates.error") &&
             action != QLatin1String("always.authorized") &&
             action != QLatin1String("/safinvalid124%$&") &&
-            !action.startsWith(QLatin1String("org.kde.auth.autotest"))) {
+            !action.startsWith(QLatin1String("org.kde.kf5auth.autotest"))) {
         return false;
     }
 
Index: kauth-4.95.0/src/AuthBackend.h
===================================================================
--- kauth-4.95.0.orig/src/AuthBackend.h	2014-01-16 15:41:06.070373452 +0000
+++ kauth-4.95.0/src/AuthBackend.h	2014-01-16 15:41:06.054373453 +0000
@@ -68,7 +68,7 @@
 
 } // namespace Auth
 
-Q_DECLARE_INTERFACE(KAuth::AuthBackend, "org.kde.auth.AuthBackend/0.1")
+Q_DECLARE_INTERFACE(KAuth::AuthBackend, "org.kde.kf5auth.AuthBackend/0.1")
 Q_DECLARE_OPERATORS_FOR_FLAGS(KAuth::AuthBackend::Capabilities)
 
 #endif
Index: kauth-4.95.0/src/ConfigureChecks.cmake
===================================================================
--- kauth-4.95.0.orig/src/ConfigureChecks.cmake	2014-01-16 15:41:06.070373452 +0000
+++ kauth-4.95.0/src/ConfigureChecks.cmake	2014-01-16 15:41:06.054373453 +0000
@@ -210,7 +210,7 @@
 # Add the correct libraries/files depending on the backend
 if(KAUTH_HELPER_BACKEND_NAME STREQUAL "DBUS")
     qt5_add_dbus_adaptor(kauth_dbus_adaptor_SRCS
-                        backends/dbus/org.kde.auth.xml
+                        backends/dbus/org.kde.kf5auth.xml
                         backends/dbus/DBusHelperProxy.h
                         KAuth::DBusHelperProxy)
 
@@ -222,12 +222,9 @@
     set(KAUTH_HELPER_BACKEND_LIBS Qt5::DBus KF5::Auth)
 
     # Install some files as well
-    install( FILES backends/dbus/org.kde.auth.conf
+    install( FILES backends/dbus/org.kde.kf5auth.conf
              DESTINATION ${SYSCONF_INSTALL_DIR}/dbus-1/system.d )
 
-    install( FILES backends/dbus/dbus_policy.stub
-                   backends/dbus/dbus_service.stub
-             DESTINATION ${DATA_INSTALL_DIR}/kauth COMPONENT Devel)
 elseif(KAUTH_HELPER_BACKEND_NAME STREQUAL "FAKE")
     message("WARNING: No valid KAuth helper backends will be built. The library will not work properly unless compiled with
              a working backend")
Index: kauth-4.95.0/src/HelperProxy.h
===================================================================
--- kauth-4.95.0.orig/src/HelperProxy.h	2014-01-16 15:41:06.070373452 +0000
+++ kauth-4.95.0/src/HelperProxy.h	2014-01-16 15:41:06.054373453 +0000
@@ -61,6 +61,6 @@
 
 } // namespace KAuth
 
-Q_DECLARE_INTERFACE(KAuth::HelperProxy, "org.kde.auth.HelperProxy/0.1")
+Q_DECLARE_INTERFACE(KAuth::HelperProxy, "org.kde.kf5auth.HelperProxy/0.1")
 
 #endif
Index: kauth-4.95.0/src/backends/dbus/DBusHelperProxy.cpp
===================================================================
--- kauth-4.95.0.orig/src/backends/dbus/DBusHelperProxy.cpp	2014-01-16 15:41:06.070373452 +0000
+++ kauth-4.95.0/src/backends/dbus/DBusHelperProxy.cpp	2014-01-16 15:41:06.054373453 +0000
@@ -31,7 +31,7 @@
 #include <syslog.h>
 
 #include "BackendsManager.h"
-#include "authadaptor.h"
+#include "kf5authadaptor.h"
 
 namespace KAuth
 {
@@ -55,7 +55,7 @@
 void DBusHelperProxy::stopAction(const QString &action, const QString &helperID)
 {
     QDBusMessage message;
-    message = QDBusMessage::createMethodCall(helperID, QLatin1String("/"), QLatin1String("org.kde.auth"), QLatin1String("stopAction"));
+    message = QDBusMessage::createMethodCall(helperID, QLatin1String("/"), QLatin1String("org.kde.kf5auth"), QLatin1String("stopAction"));
 
     QList<QVariant> args;
     args << action;
@@ -73,7 +73,7 @@
 
     m_busConnection.interface()->startService(helperID);
 
-    if (!m_busConnection.connect(helperID, QLatin1String("/"), QLatin1String("org.kde.auth"), QLatin1String("remoteSignal"), this, SLOT(remoteSignalReceived(int,QString,QByteArray)))) {
+    if (!m_busConnection.connect(helperID, QLatin1String("/"), QLatin1String("org.kde.kf5auth"), QLatin1String("remoteSignal"), this, SLOT(remoteSignalReceived(int,QString,QByteArray)))) {
         ActionReply errorReply = ActionReply::DBusErrorReply();
         errorReply.setErrorDescription(tr("DBus Backend error: connection to helper failed. ")
                                        + m_busConnection.lastError().message());
@@ -81,7 +81,7 @@
     }
 
     QDBusMessage message;
-    message = QDBusMessage::createMethodCall(helperID, QLatin1String("/"), QLatin1String("org.kde.auth"), QLatin1String("performAction"));
+    message = QDBusMessage::createMethodCall(helperID, QLatin1String("/"), QLatin1String("org.kde.kf5auth"), QLatin1String("performAction"));
 
     QList<QVariant> args;
     args << action << BackendsManager::authBackend()->callerID() << blob;
@@ -110,7 +110,7 @@
     m_busConnection.interface()->startService(helperID);
 
     QDBusMessage message;
-    message = QDBusMessage::createMethodCall(helperID, QLatin1String("/"), QLatin1String("org.kde.auth"), QLatin1String("authorizeAction"));
+    message = QDBusMessage::createMethodCall(helperID, QLatin1String("/"), QLatin1String("org.kde.kf5auth"), QLatin1String("authorizeAction"));
 
     QList<QVariant> args;
     args << action << BackendsManager::authBackend()->callerID();
@@ -137,7 +137,7 @@
 
 bool DBusHelperProxy::initHelper(const QString &name)
 {
-    new AuthAdaptor(this);
+    new Kf5authAdaptor(this);
 
     if (!m_busConnection.registerService(name)) {
         return false;
Index: kauth-4.95.0/src/backends/dbus/org.kde.auth.conf
===================================================================
--- kauth-4.95.0.orig/src/backends/dbus/org.kde.auth.conf	2014-01-16 15:41:06.070373452 +0000
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,13 +0,0 @@
-<!DOCTYPE busconfig PUBLIC
- "-//freedesktop//DTD D-BUS Bus Configuration 1.0//EN"
- "http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd">
-<busconfig>
- 
-<!-- Allow anyone to call into the service - we'll reject callers using PolicyKit -->
-  <policy context="default">
-    <allow send_interface="org.kde.auth"/>
-    <allow receive_sender="org.kde.auth"/>
-    <allow receive_interface="org.kde.auth"/>
-  </policy>
- 
-</busconfig>
Index: kauth-4.95.0/src/backends/dbus/org.kde.auth.xml
===================================================================
--- kauth-4.95.0.orig/src/backends/dbus/org.kde.auth.xml	2014-01-16 15:41:06.070373452 +0000
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,25 +0,0 @@
-<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
-<node>
-    <interface name="org.kde.auth">
-        <method name="performAction" >
-            <arg name="action" type="s" direction="in" />
-            <arg name="callerID" type="ay" direction="in" />
-            <arg name="arguments" type="ay" direction="in" />
-            <arg name="r" type="ay" direction="out" />
-        </method>
-        <method name="authorizeAction" >
-            <arg name="action" type="s" direction="in" />
-            <arg name="callerID" type="ay" direction="in" />
-            <arg name="r" type="u" direction="out" />
-        </method>
-        <method name="stopAction" >
-            <arg name="action" type="s" direction="in" />
-            <annotation name="org.freedesktop.DBus.Method.NoReply" value="true"/>
-        </method>
-        <signal name="remoteSignal" >
-            <arg name="type" type="i" />
-            <arg name="action" type="s" />
-            <arg name="blob" type="ay" />
-        </signal>
-    </interface>
-</node>
Index: kauth-4.95.0/src/backends/dbus/org.kde.kf5auth.conf
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ kauth-4.95.0/src/backends/dbus/org.kde.kf5auth.conf	2014-01-16 15:41:06.058373453 +0000
@@ -0,0 +1,13 @@
+<!DOCTYPE busconfig PUBLIC
+ "-//freedesktop//DTD D-BUS Bus Configuration 1.0//EN"
+ "http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd">
+<busconfig>
+ 
+<!-- Allow anyone to call into the service - we'll reject callers using PolicyKit -->
+  <policy context="default">
+    <allow send_interface="org.kde.kf5auth"/>
+    <allow receive_sender="org.kde.kf5auth"/>
+    <allow receive_interface="org.kde.kf5auth"/>
+  </policy>
+ 
+</busconfig>
Index: kauth-4.95.0/src/backends/dbus/org.kde.kf5auth.xml
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ kauth-4.95.0/src/backends/dbus/org.kde.kf5auth.xml	2014-01-16 15:41:06.058373453 +0000
@@ -0,0 +1,25 @@
+<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
+<node>
+    <interface name="org.kde.kf5auth">
+        <method name="performAction" >
+            <arg name="action" type="s" direction="in" />
+            <arg name="callerID" type="ay" direction="in" />
+            <arg name="arguments" type="ay" direction="in" />
+            <arg name="r" type="ay" direction="out" />
+        </method>
+        <method name="authorizeAction" >
+            <arg name="action" type="s" direction="in" />
+            <arg name="callerID" type="ay" direction="in" />
+            <arg name="r" type="u" direction="out" />
+        </method>
+        <method name="stopAction" >
+            <arg name="action" type="s" direction="in" />
+            <annotation name="org.freedesktop.DBus.Method.NoReply" value="true"/>
+        </method>
+        <signal name="remoteSignal" >
+            <arg name="type" type="i" />
+            <arg name="action" type="s" />
+            <arg name="blob" type="ay" />
+        </signal>
+    </interface>
+</node>
Index: kauth-4.95.0/src/kauthactionreply.h
===================================================================
--- kauth-4.95.0.orig/src/kauthactionreply.h	2014-01-16 15:41:06.070373452 +0000
+++ kauth-4.95.0/src/kauthactionreply.h	2014-01-16 15:41:06.058373453 +0000
@@ -102,8 +102,8 @@
  };
  @endcode
 
- The slot names are the last part of the action name, without the helper's ID if it's a prefix, with all the dots replaced by underscores. In this case, the helper ID is "org.kde.auth.example", so those
- three slots implement the actions "org.kde.auth.example.read", "org.kde.auth.example.write" and "org.kde.auth.example.longaction". The helper ID doesn't have to appear at the beginning of the action
+ The slot names are the last part of the action name, without the helper's ID if it's a prefix, with all the dots replaced by underscores. In this case, the helper ID is "org.kde.kf5auth.example", so those
+ three slots implement the actions "org.kde.kf5auth.example.read", "org.kde.kf5auth.example.write" and "org.kde.kf5auth.example.longaction". The helper ID doesn't have to appear at the beginning of the action
  name, but it's good practice. If you want to extend MyHelper to implement also a different action like "org.kde.datetime.changetime", since the helper ID doesn't match you'll have to implement a
  slot called org_kde_datetime_changetime().
 
@@ -144,7 +144,7 @@
  KAUTH_HELPER_MAIN() macro that will take care of everything. It's used like this:
 
  @code
- KAUTH_HELPER_MAIN("org.kde.auth.example", MyHelper)
+ KAUTH_HELPER_MAIN("org.kde.kf5auth.example", MyHelper)
  @endcode
 
  The first parameter is the string containing the helper identifier. Please note that you need to use this same string in the application's code to tell the library which helper to call, so please
@@ -177,7 +177,7 @@
  each action and some parameters. The definition for the read action is:
 
  @verbatim
- [org.kde.auth.example.read]
+ [org.kde.kf5auth.example.read]
  Name=Read action
  Description=Read action description
  Policy=auth_admin
@@ -212,8 +212,8 @@
  @code
  QVariantMap args;
  args["filename"] = filename;
- Action readAction = "org.kde.auth.example.read";
- readAction.setHelperID("org.kde.auth.example");
+ Action readAction = "org.kde.kf5auth.example.read";
+ readAction.setHelperID("org.kde.kf5auth.example");
  readAction.setArguments(args);
 
  ActionReply reply = readAction.execute();
@@ -232,7 +232,7 @@
 
  @section kauth_async Asynchronous calls, data reporting, and action termination
 
- For a more advanced example, we look at the action "org.kde.auth.example.longaction" in the example helper. This is an action that takes a long time to execute, so we need some features:
+ For a more advanced example, we look at the action "org.kde.kf5auth.example.longaction" in the example helper. This is an action that takes a long time to execute, so we need some features:
  - The helper needs to regularly send data to the application, to inform about the execution status.
  - The application needs to be able to stop the action execution if the user stops it or close the application.
  The example code follows:
@@ -263,7 +263,7 @@
  @code
  void MainWindow::on_longAction_triggered()
  {
-    Action longAction = "org.kde.auth.example.longaction";
+    Action longAction = "org.kde.kf5auth.example.longaction";
     connect(longAction.watcher(), SIGNAL(progressStep(int)),
             progressBar,          SLOT(setValue(int)));
     connect(longAction.watcher(), SIGNAL(actionPerformed(ActionReply)),
@@ -278,7 +278,7 @@
 
  void MainWindow::stopLongAction()
  {
-     Action("org.kde.auth.example.longaction").stop();
+     Action("org.kde.kf5auth.example.longaction").stop();
  }
 
  void MainWindow::longActionPerformed(ActionReply reply)
